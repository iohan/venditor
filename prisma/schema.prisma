datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Shop {
  id       Int        @id @default(autoincrement())
  title    String
  Category Category[]
  Product  Product[]
  Media    Media[]
}

model Category {
  id              Int               @id @default(autoincrement())
  title           String
  shop            Shop              @relation(fields: [shopId], references: [id])
  shopId          Int
  ProductCategory ProductCategory[]
}

model ProductCategory {
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([productId, categoryId])
}

model Product {
  id              Int               @id @default(autoincrement())
  title           String
  description     String?
  draft           Boolean           @default(true)
  shop            Shop              @relation(fields: [shopId], references: [id])
  shopId          Int
  ProductMedia    ProductMedia[]
  ProductCategory ProductCategory[]
  basePrice       Int?
  stock           Int?
  sku             String
  discount        Int?
}

model ProductMedia {
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  media     Media   @relation(fields: [mediaId], references: [id])
  mediaId   Int

  @@id([productId, mediaId])
}

model Media {
  id           Int            @id @default(autoincrement())
  type         String
  url          String
  shop         Shop           @relation(fields: [shopId], references: [id])
  shopId       Int
  ProductMedia ProductMedia[]
}
